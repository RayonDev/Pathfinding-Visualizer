{"version":3,"sources":["PathfindingVisualizer/Node/Node.jsx","PathfindingVisualizer/PathfindingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Node","this","props","col","row","isFinish","isStart","isWall","id","className","Component","PathfindingVisualizer","state","nodes","righe","rigaCorrente","colonne","push","setState","map","riga","rigaIndex","nodo","nodoIndice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGqBA,G,6KACN,IAAD,EAOFC,KAAKC,MALLC,EAFE,EAEFA,IACAC,EAHE,EAGFA,IAHE,EAIFC,SAJE,EAKFC,QALE,EAMFC,OAGJ,OACI,qBACAC,GAAE,eAAUJ,EAAV,YAAiBD,GACnBM,UAAS,a,GAbaC,cCCbC,G,wDACjB,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACXC,MAAO,IAHM,E,gEAUjB,IADA,IAAMA,EAAQ,GACNC,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAEtC,IADA,IAAMC,EAAe,GACbC,EAAU,EAAGA,EAAU,GAAIA,IAEjCD,EAAaE,KAAK,IAEpBJ,EAAMI,KAAKF,GAEbd,KAAKiB,SAAS,CAACL,Y,+BAGP,IACDA,EAASZ,KAAKW,MAAdC,MAEP,OACE,qBAAKJ,UAAU,UAAf,SACGI,EAAMM,KAAI,SAACC,EAAMC,GAChB,OAAO,8BACJD,EAAKD,KAAI,SAACG,EAAMC,GAAP,OAAsB,cAAC,EAAD,kB,GA7BKb,cCQpCc,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCKSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b2baf33c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component {\r\n    render () {\r\n        const {\r\n            col,\r\n            row,\r\n            isFinish,\r\n            isStart,\r\n            isWall,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div \r\n            id={`node-${row}-${col}`}\r\n            className={`node`}>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    \r\n\r\n    \r\n}","import React, {Component} from 'react';\r\nimport Node from './Node/Node';\r\nimport './PathfindingVisualizer.css';\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          nodes: []\r\n        };\r\n    }\r\n\r\n    // Funzione che viene chiamata all'inizializzazione del component\r\n    componentDidMount() {\r\n      const nodes = [];\r\n      for(let righe = 0; righe < 15; righe++) {\r\n        const rigaCorrente = [];\r\n        for(let colonne = 0; colonne < 50; colonne++) {\r\n          // Creo una matrice\r\n          rigaCorrente.push([]);\r\n        }\r\n        nodes.push(rigaCorrente);\r\n      }\r\n      this.setState({nodes});\r\n    }\r\n\r\n    render() {\r\n      const {nodes} = this.state;\r\n\r\n      return(\r\n        <div className=\"griglia\">\r\n          {nodes.map((riga, rigaIndex) => {\r\n            return <div>\r\n              {riga.map((nodo, nodoIndice) => <Node></Node>)}\r\n              </div>\r\n          })}\r\n        </div>\r\n      )\r\n        \r\n    }\r\n}","//import logo from './logo.svg';\r\nimport './App.css';\r\nimport PathfindingVisualizer from \"./PathfindingVisualizer/PathfindingVisualizer.jsx\";\r\n\r\nfunction App() {\r\n  return(\r\n    <div className=\"App\">\r\n      <PathfindingVisualizer></PathfindingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}